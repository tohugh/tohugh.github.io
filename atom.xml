<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[hugh's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-03-12T03:31:50.419Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[hugh]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[优雅地退出 App！]]></title>
    <link href="http://yoursite.com/2016/03/12/%E4%BC%98%E9%9B%85%E5%9C%B0%E9%80%80%E5%87%BAApp/"/>
    <id>http://yoursite.com/2016/03/12/优雅地退出App/</id>
    <published>2016-03-12T03:31:50.419Z</published>
    <updated>2016-03-12T03:31:50.419Z</updated>
    <content type="html"><![CDATA[<p>摘要：使用 SingleTask 退出App<br><a id="more"></a></p>
<h3 id="u53C2_u8003_3Asoul_code_u7684_u4E13_u680F_Android_u9000_u51FA_u5E94_u7528_u6700_u4F18_u96C5_u7684_u65B9_u5F0F_28_u6539_u8FDB_u7248_29"><a href="#u53C2_u8003_3Asoul_code_u7684_u4E13_u680F_Android_u9000_u51FA_u5E94_u7528_u6700_u4F18_u96C5_u7684_u65B9_u5F0F_28_u6539_u8FDB_u7248_29" class="headerlink" title="参考:soul_code的专栏 Android退出应用最优雅的方式(改进版)"></a><a href="https://desktop.github.com/" target="_blank" rel="external">参考:soul_code的专栏 Android退出应用最优雅的方式(改进版)</a></h3><h4 id="SingleTask_3A__u5728_u5F53_u524D_u6808_u4E2D_u67E5_u8BE2_u662F_u5426_u5B58_u5728Activity_u7684_u5B9E_u4F8B_uFF0C_u5982_u679C_u5B58_u5728_uFF0C_u5219_u5C06_u5176_u81F3_u4E8E_u6808_u9876_uFF0C_u5E76_u5C06_u5176_u4E4B_u4E0A_u7684_u6240_u6709Activity_u6808_u79FB_u9664_u3002"><a href="#SingleTask_3A__u5728_u5F53_u524D_u6808_u4E2D_u67E5_u8BE2_u662F_u5426_u5B58_u5728Activity_u7684_u5B9E_u4F8B_uFF0C_u5982_u679C_u5B58_u5728_uFF0C_u5219_u5C06_u5176_u81F3_u4E8E_u6808_u9876_uFF0C_u5E76_u5C06_u5176_u4E4B_u4E0A_u7684_u6240_u6709Activity_u6808_u79FB_u9664_u3002" class="headerlink" title="SingleTask: 在当前栈中查询是否存在Activity的实例，如果存在，则将其至于栈顶，并将其之上的所有Activity栈移除。"></a>SingleTask: 在当前栈中查询是否存在Activity的实例，如果存在，则将其至于栈顶，并将其之上的所有Activity栈移除。</h4><h3 id="u601D_u8DEF"><a href="#u601D_u8DEF" class="headerlink" title="思路"></a>思路</h3><ol>
<li><p>设置MainActivity的加载模式为 singleTask</p>
<p> <code>android:launchMode=&quot;singleTask&quot;</code></p>
</li>
<li><p>重写MainActivity中的onNewIntent方法</p>
<p> <code>注意：如果在栈中已经有该Activity的实例，就重用该实例(会调用实例的onNewIntent())。重用时，会让该实例回到栈顶，因此在它上面的实例将会被移除栈。如果栈中不存在该实例，将会创建新的实例放入栈中（此时不会调用onNewIntent()）。</code></p>
<pre><code>private static final String TAG_EXIT = &quot;exit&quot;;    

@Override
protected void onNewIntent(Intent intent) {
    super.onNewIntent(intent);
    if (intent != null) {
        boolean isExit = intent.getBooleanExtra(TAG_EXIT, false);
        if (isExit) {
            this.finish();
        }
    }
}
</code></pre></li>
</ol>
<ol>
<li><p>需要退出时在Intent中添加退出的tag</p>
<pre><code>Intent intent = new Intent(this,MainActivity.class);
intent.putExtra(MainActivity.TAG_EXIT, true);
startActivity(intent);
</code></pre></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>摘要：使用 SingleTask 退出App<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AndroidAnnotations的使用]]></title>
    <link href="http://yoursite.com/2016/03/10/AndroidAnnotations%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/03/10/AndroidAnnotations的使用/</id>
    <published>2016-03-10T09:50:53.782Z</published>
    <updated>2016-03-10T09:50:53.782Z</updated>
    <content type="html"><![CDATA[<p>摘要：AndroidAnnotations在AS中的环境搭建和注意事项。<br><a id="more"></a></p>
<p><strong>Github源码</strong>：<strong><a href="https://github.com/tohugh/MyAnnotationsDemo" target="_blank" rel="external">AndroidAnnotations的简单使用</a></strong></p>
<h3 id="u73AF_u5883_u642D_u5EFA_3A"><a href="#u73AF_u5883_u642D_u5EFA_3A" class="headerlink" title="环境搭建:"></a>环境搭建:</h3><ol>
<li><p>Project的build.gradle</p>
<pre><code>buildscript {
repositories {
jcenter()
}
dependencies {
classpath &apos;com.android.tools.build:gradle:1.3.0&apos;

// NOTE: Do not place your application dependencies here; they belong
// in the individual module build.gradle files

//配置Android annotations
classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.8&apos;
}
}
</code></pre><p>关键词:<code>classpath &#39;com.neenbedankt.gradle.plugins:android-apt:1.8&#39;</code></p>
</li>
<li><p>Module的build.gradle</p>
<pre><code>apply plugin: &apos;com.android.application&apos;
//配置Android annotations
apply plugin: &apos;android-apt&apos;
def AAVersion = &apos;3.3.2&apos;

android {
    compileSdkVersion 23
    buildToolsVersion &quot;23.0.2&quot;

    defaultConfig {
        applicationId &quot;com.hugh.myannotationsdemo&quot;
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName &quot;1.0&quot;
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;
        }
    }
}

//配置Android annotations
apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName &quot;your.package.name&quot;

        // You can set optional annotation processing options here, like these commented options:
        // logLevel &apos;INFO&apos;
        // logFile &apos;/var/log/aa.log&apos;
    }
}

dependencies {
    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])
    testCompile &apos;junit:junit:4.12&apos;
    compile &apos;com.android.support:appcompat-v7:23.2.0&apos;
    //配置Android annotations
    apt &quot;org.androidannotations:androidannotations:$AAVersion&quot;
    compile &quot;org.androidannotations:androidannotations-api:$AAVersion&quot;

}
</code></pre><p> 关键词：<br>`//配置Android annotations</p>
<pre><code>    apply plugin: &apos;android-apt&apos;
    def AAVersion = &apos;3.3.2&apos;`    

//配置Android annotations
apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName &quot;your.package.name&quot;

        // You can set optional annotation processing options here, like these commented options:
        // logLevel &apos;INFO&apos;
        // logFile &apos;/var/log/aa.log&apos;
    }
}

//配置Android annotations
    apt &quot;org.androidannotations:androidannotations:$AAVersion&quot;
    compile &quot;org.androidannotations:androidannotations-api:$AAVersion&quot;
</code></pre></li>
<li><p>重新编译</p>
</li>
</ol>
<h4 id="u6CE8_u610F_u4E8B_u9879_uFF1A"><a href="#u6CE8_u610F_u4E8B_u9879_uFF1A" class="headerlink" title="注意事项："></a>注意事项：</h4><ol>
<li>注册同名的Activity_</li>
<li>View的修饰符不能是private</li>
<li>用注解注释的方法不能使private</li>
<li>大型项目一般不适用此框架</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>摘要：AndroidAnnotations在AS中的环境搭建和注意事项。<br>]]>
    
    </summary>
    
      <category term="Android，AndroidAnnotations" scheme="http://yoursite.com/tags/Android%EF%BC%8CAndroidAnnotations/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Material Design遇到的问题]]></title>
    <link href="http://yoursite.com/2016/02/02/Material%20Design%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/02/02/Material Design遇到的问题/</id>
    <published>2016-02-02T15:16:14.659Z</published>
    <updated>2016-02-02T15:16:14.659Z</updated>
    <content type="html"><![CDATA[<p>摘要：Material Design<br><a id="more"></a></p>
<p>###控件篇</p>
<hr>
<ul>
<li><strong>参考</strong>：<strong><a href="http://blog.csdn.net/feiduclear_up/article/details/46457433" target="_blank" rel="external">Android5.x新特性之 Toolbar和Theme的使用</a></strong></li>
<li><strong>参考</strong>：<strong><a href="https://segmentfault.com/a/1190000003695173" target="_blank" rel="external">Material Design样式及ToolBar使用初探</a></strong></li>
</ul>
<p>####toolbar的使用：</p>
<ol>
<li>在<code>styles.xml</code>下，把<code>&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;</code>修改为<code>&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt;</code></li>
<li>在布局文件下添加<code>v7</code>提供的 <code>Toolbar</code></li>
<li><p>代码添加Toolbar:</p>
<pre><code>    /**
 * 初始化Toolbar
 */
private void initToolbar() {
    mToolbar = (Toolbar) findViewById(R.id.toolbar);
    mToolbar.setTitleTextColor(getResources().getColor(R.color.white));//标题颜色
    setSupportActionBar(mToolbar);
    //getSupportActionBar().setDisplayShowTitleEnabled(false);
    mToolbar.setTitle(&quot;MyNotes&quot;);
    //toolbar.setSubtitle(&quot;副标题&quot;);
}
</code></pre></li>
<li><p>在toolbar添加按钮</p>
<ol>
<li><p>新建menu/main_menu，加入如下代码，ndroid:orderInCategory设置menu的优先级，数字越小优先级越高。优先级低的图标在toolbar中menu图标放不下时，自动折叠到最右侧的图标下：</p>
<pre><code>&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;item
        android:id=&quot;@+id/titlebar_edit&quot;
        android:icon=&quot;@drawable/ic_edit&quot;
        android:orderInCategory=&quot;1&quot;
        android:title=&quot;search&quot;
        app:showAsAction=&quot;ifRoom&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/titlebar_setting&quot;
        android:icon=&quot;@drawable/ic_more&quot;
        android:orderInCategory=&quot;1&quot;
        android:title=&quot;setting&quot;
        app:showAsAction=&quot;ifRoom&quot; /&gt;
&lt;/menu&gt;
</code></pre></li>
<li><p>在mainactivity中添加代码,不然menu菜单不会显示:</p>
<pre><code>@Override
public boolean onCreateOptionsMenu(Menu menu) {
    getMenuInflater().inflate(R.menu.menu_main, menu);
    return true;
}
</code></pre></li>
<li><p>设置menu的点击事件</p>
<pre><code>toolbar.setOnMenuItemClickListener(this);//menu的点击事件

@Override
public boolean onMenuItemClick(MenuItem item) {
    switch (item.getItemId()) {
        case R.id.titlebar_search:
            //TODO 搜索
            break;
        case R.id.titlebar_collect:
            //TODO 收藏
            break;
        case R.id.titlebar_setting:
            //TODO 设置
            break;
    }
return true;
}
</code></pre></li>
</ol>
</li>
<li><p>修改toolbar标题栏的底色</p>
<pre><code>xml
@style/ThemeOverlay.Appcompat.Dark--&gt;黑底白字
@style/ThemeOverlay.Appcompat.Light--&gt;白底黑字
</code></pre></li>
</ol>
<p>####DrawerLayout</p>
<ul>
<li><p>在xml文件中添加DrawerLayout</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;android.support.v4.widget.DrawerLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:id=&quot;@+id/drawer_layout&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:showIn=&quot;@layout/activity_main&quot;&gt;

&lt;!-- the main content view --&gt;

&lt;FrameLayout
    android:id=&quot;@+id/content_frame&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot; /&gt;

&lt;!-- the navigetion view --&gt;

&lt;android.support.design.widget.NavigationView
    android:id=&quot;@+id/navigation_view&quot;
    android:layout_width=&quot;240dp&quot;
    android:layout_height=&quot;match_parent&quot;
    android:layout_gravity=&quot;start&quot;
    app:headerLayout=&quot;@layout/drawer_header&quot;
    app:menu=&quot;@menu/drawer&quot; /&gt;
</code></pre></li>
</ul>
<pre><code>&lt;/android.support.v4.widget.DrawerLayout&gt; 
</code></pre><ul>
<li><p>在java代码中设置抽屉开关</p>
<pre><code>/**
 * 初始化DrawerLayout
 */
private void initDrawerLayout() {
    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
    mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, mToolbar, R.string.open, R.string.close);
    /*抽屉指示器/启示与链接DrawerLayout的状态同步。*/
    mDrawerToggle.syncState();
    mDrawerLayout.setDrawerListener(mDrawerToggle);
}
</code></pre></li>
</ul>
<p>####Navigationview的使用</p>
<ul>
<li>在build.gradle添加<code>compile &#39;com.android.support:design:23.1.1&#39;</code></li>
<li><p>在xml文件中添加navigationview</p>
<pre><code>&lt;android.support.design.widget.NavigationView
        android:id=&quot;@+id/navigation_view&quot;
        android:layout_width=&quot;240dp&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_gravity=&quot;start&quot;
       &lt;!--headerlayout不是必须的--&gt;
        app:headerLayout=&quot;@layout/drawer_header&quot;
        app:menu=&quot;@menu/drawer&quot; /&gt;
</code></pre></li>
<li><p>新建res/menu/drawer,撰写一下代码，navigationview就有菜单了</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;!-- checkableBehavior 代表组中只有一个菜单可以checked--&gt;
    &lt;group android:checkableBehavior=&quot;single&quot;&gt;
        &lt;item
            android:id=&quot;@+id/navigation_item_book&quot;
            android:icon=&quot;@drawable/ic_favorite&quot;
            android:title=&quot;@string/navigation_book&quot; /&gt;
        &lt;item
            android:id=&quot;@+id/navigation_item_example&quot;
            android:icon=&quot;@drawable/ic_favorite&quot;
            android:title=&quot;@string/navigation_example&quot; /&gt;
        &lt;item
            android:id=&quot;@+id/navigation_item_blog&quot;
            android:icon=&quot;@drawable/ic_favorite&quot;
            android:title=&quot;@string/navigation_my_blog&quot; /&gt;

        &lt;item
            android:id=&quot;@+id/navigation_item_about&quot;
            android:icon=&quot;@drawable/ic_favorite&quot;
            android:title=&quot;@string/navigation_about&quot; /&gt;
    &lt;/group&gt;
&lt;/menu&gt;
</code></pre></li>
</ul>
<p>###RecyclerCView的使用</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>摘要：Material Design<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Material Design" scheme="http://yoursite.com/tags/Material-Design/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio问题汇总]]></title>
    <link href="http://yoursite.com/2016/01/28/Android%20Studio%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2016/01/28/Android Studio问题汇总/</id>
    <published>2016-01-28T03:30:19.488Z</published>
    <updated>2016-01-28T03:30:19.488Z</updated>
    <content type="html"><![CDATA[<p>摘要：使用AS过程中遇到的问题<br><a id="more"></a></p>
<pre><code>Q:在xml布局文件预览出现以下问题
Rendering Problems The following classes could not be found:
android.support.v7.internal.app.WindowDecorActionBar (Fix Build Path, Create Class) Tip: Try to build the project.

A:&quot;ctrl+sihft+n&quot;定位到styles.xml文件，把parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;
修改为parent=&quot;Base.Theme.AppCompat.Light.DarkActionBar&quot;
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>摘要：使用AS过程中遇到的问题<br>]]>
    
    </summary>
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android,获取图片和视频的缩略图]]></title>
    <link href="http://yoursite.com/2016/01/27/Android%E7%94%9F%E6%88%90%E7%BC%A9%E7%95%A5%E5%9B%BE/"/>
    <id>http://yoursite.com/2016/01/27/Android生成缩略图/</id>
    <published>2016-01-27T08:56:15.859Z</published>
    <updated>2016-01-27T08:56:15.859Z</updated>
    <content type="html"><![CDATA[<p>摘要：Android,获取图片和视频的缩略图的代码及注释。<br><a id="more"></a></p>
<pre><code> /**
 * @param uri：图片保存路径
 * @param width: 缩略图的宽
 * @param height：缩略图的高
 * @return bitmap:缩略图
 * 获取缩略图
 */
public Bitmap getImageThumbnail(String uri,int width,int height){
    //创建bitmap对象
    Bitmap bitmap = null;
    BitmapFactory.Options options = new BitmapFactory.Options();
    /*
    *如果设置为true的话不会返回一个真正的bitmap，仅仅会取回宽高，这样就不会占用太多内存导致频繁的oom
     */
    options.inJustDecodeBounds = true;
    bitmap = BitmapFactory.decodeFile(uri,options);
    /*
    * options.outWidth:图片原始宽
    * options.outHeight:图片原始高
    * */
    int beWidth = options.outWidth / width;//缩略图的宽
    int beHeight = options.outHeight / height;//缩略图的高
    int be = 1;
    /*
    *计算缩放比
     */
    if(beWidth&lt;beHeight){
        be = beWidth;
    }else{
        be = beHeight;
    }if (be &lt;= 0){
        be = 1;
    }
    options.inSampleSize = be;
    /*
    * 这次要把inJustDecodeBounds设置为false是因为返回的是真正的bitmap
    * */
    options.inJustDecodeBounds = false;
    bitmap = BitmapFactory.decodeFile(uri, options);//根据比例压缩过的图像
    /*使用ThumbnailUtils生成的图像不会被拉伸*/
    bitmap = ThumbnailUtils.extractThumbnail(bitmap, width, height, ThumbnailUtils.OPTIONS_RECYCLE_INPUT);
    return bitmap;
}
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>摘要：Android,获取图片和视频的缩略图的代码及注释。<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的博客搭建好了！]]></title>
    <link href="http://yoursite.com/2016/01/27/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%A5%BD%E4%BA%86/"/>
    <id>http://yoursite.com/2016/01/27/我的博客搭建好了/</id>
    <published>2016-01-27T08:42:50.963Z</published>
    <updated>2016-01-27T08:42:50.963Z</updated>
    <content type="html"><![CDATA[<p>摘要：Hexo搭建Blog的过程<br><a id="more"></a></p>
<h2 id="u642D_u5EFA_u8FC7_u7A0B"><a href="#u642D_u5EFA_u8FC7_u7A0B" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="u5DE5_u5177_uFF1A"><a href="#u5DE5_u5177_uFF1A" class="headerlink" title="工具："></a>工具：</h3><ul>
<li><a href="https://desktop.github.com/" target="_blank" rel="external">Github For Windows</a></li>
<li><a href="https://git-scm.com/" target="_blank" rel="external">Git</a></li>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
<li>Hexo （安装好上述软件之后）<ul>
<li>打开Github下面的GitShell，输入下面的命令行：<ul>
<li><code>npm install hexo-cli -g</code></li>
<li><code>npm install hexo --save</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="u521D_u59CB_u5316_u914D_u7F6E"><a href="#u521D_u59CB_u5316_u914D_u7F6E" class="headerlink" title="初始化配置"></a>初始化配置</h3><ol>
<li>创建目录如：<code>E:\myblog\hexo</code></li>
<li>GitShell中定位到该目录输入下面的命令行，folder 即<strong>tohugh.github.io</strong><ol>
<li><code>hexo init &lt;folder&gt;</code></li>
<li><code>cd &lt;folder&gt;</code></li>
<li><code>npm install</code></li>
</ol>
</li>
<li><p>安装hexo插件</p>
<p> <img src="http://7xpu2r.com1.z0.glb.clouddn.com/%E6%8F%92%E4%BB%B6%E5%91%BD%E4%BB%A4%E8%A1%8C.jpg" alt=""></p>
</li>
<li><p>查看效果：输入命令行<code>hexo server</code>，浏览器地址栏输入<code>localhost:4000</code></p>
</li>
</ol>
<h3 id="u540C_u6B65_u5230Github"><a href="#u540C_u6B65_u5230Github" class="headerlink" title="同步到Github"></a>同步到Github</h3><ul>
<li><p>配置deployment</p>
<pre><code>- git config --global user.name &quot;yourname&quot;
- git config --global user.email &quot;youremail&quot;
</code></pre></li>
<li><p>在_config.yml文件中，找到Deployment，然后按照如下修改：<br>  <img src="http://7xpu2r.com1.z0.glb.clouddn.com/deploy%E5%91%BD%E4%BB%A4%E8%A1%8C.jpg" alt=""></p>
</li>
<li><code>hexo g</code> 生成静态网页</li>
<li><code>hexo d</code> 开始部署</li>
</ul>
<h3 id="u5199_u65B0_u7684_u535A_u5BA2"><a href="#u5199_u65B0_u7684_u535A_u5BA2" class="headerlink" title="写新的博客"></a>写新的博客</h3><ul>
<li>在<code>source\_posts</code>目录下新建<code>.md</code> 文件，在<code>xx.github.io</code>目录下<code>git bash here</code>，然后就…..可以了!</li>
</ul>
<h2 id="u53C2_u8003_u8D44_u6599"><a href="#u53C2_u8003_u8D44_u6599" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="http://wsgzao.github.io/post/hexo-guide/#" target="_blank" rel="external">使用GitHub和Hexo搭建免费静态Blog</a></li>
<li><a href="http://blog.shijinrong.cn/2016/01/03/2016-01-03-how-to-build-blog/" target="_blank" rel="external">如何使用10个小时搭建出个人域名而又Geek的独立博客？</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>摘要：Hexo搭建Blog的过程<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
